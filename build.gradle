plugins {
  id "org.jetbrains.kotlin.jvm" version "1.3.70"
  id "org.jetbrains.kotlin.kapt" version "1.3.70"
  id "org.jetbrains.kotlin.plugin.allopen" version "1.3.70"
  id "com.github.johnrengelman.shadow" version "5.2.0"
  id "application"
  id "com.gorylenko.gradle-git-properties" version "2.0.0"
}


version "0.1"
group "example.micronaut"
mainClassName = "example.micronaut.Application"

repositories {
  mavenCentral()
  maven { url "https://jcenter.bintray.com" }
}

configurations {
  // for dependencies that are needed for development only
  developmentOnly
}

dependencies {
  implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
  implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
  implementation "io.micronaut:micronaut-runtime"
  implementation "javax.annotation:javax.annotation-api"
  implementation "io.micronaut:micronaut-http-server-netty"
  implementation "io.micronaut:micronaut-http-client"
  // add endpoint support
  implementation "io.micronaut:micronaut-management"
  // add view templating support
  implementation "io.micronaut:micronaut-views-velocity"
  runtime "org.apache.velocity:velocity-engine-core:2.0"
  // bean validation support
  implementation "io.micronaut:micronaut-validation"
  // graalVM support
  annotationProcessor "io.micronaut:micronaut-graal:$shouldBeMicronautVersion"
  compileOnly "org.graalvm.nativeimage:svm:20.0.0"
  //
  kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
  kapt "io.micronaut:micronaut-inject-java"
  kapt "io.micronaut:micronaut-validation"
  kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
  kaptTest "io.micronaut:micronaut-inject-java"
  runtimeOnly "com.fasterxml.jackson.module:jackson-module-kotlin:2.10.2"
  runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
  testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
  testImplementation "io.micronaut.test:micronaut-test-kotlintest"
  testImplementation "io.mockk:mockk:1.9.3"
  testImplementation "io.kotlintest:kotlintest-runner-junit5:3.3.2"
  testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
  testImplementation("org.junit.jupiter:junit-jupiter-api")
  testImplementation("org.spekframework.spek2:spek-dsl-jvm:$spekVersion") {
    exclude group: 'org.jetbrains.kotlin'
  }
  testRuntimeOnly("org.spekframework.spek2:spek-runner-junit5:$spekVersion") {
    exclude group: 'org.junit.platform'
    exclude group: 'org.jetbrains.kotlin'
  }
  testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

}

test.classpath += configurations.developmentOnly

mainClassName = "example.micronaut.Application"

test {
  useJUnitPlatform{
    includeEngines 'spek2'
  }
}

allOpen {
  annotation("io.micronaut.aop.Around")
}

compileKotlin {
  kotlinOptions {
    jvmTarget = '11'
    //Will retain parameter names for Java reflection
    javaParameters = true
  }
}

compileTestKotlin {
  kotlinOptions {
    jvmTarget = '11'
    javaParameters = true
  }
}

shadowJar {
  mergeServiceFiles()
}

tasks.withType(JavaExec) {
  classpath += configurations.developmentOnly
  jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}
